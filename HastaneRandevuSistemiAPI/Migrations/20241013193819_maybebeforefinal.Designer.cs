// <auto-generated />
using System;
using HastaneRandevuSistemiAPI.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HastaneRandevuSistemiAPI.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20241013193819_maybebeforefinal")]
    partial class maybebeforefinal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HastaneRandevuSistemiAPI.Models.Entities.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Branch")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientTc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientTc");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fda67a02-94db-4702-b16d-c063e36168bd"),
                            AppointmentDate = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Branch = 0,
                            DoctorId = 1,
                            PatientTc = "12345678901"
                        },
                        new
                        {
                            Id = new Guid("e00e76ef-1835-47c4-9e24-50e9b4a97525"),
                            AppointmentDate = new DateTime(2024, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Branch = 0,
                            DoctorId = 2,
                            PatientTc = "23456789012"
                        },
                        new
                        {
                            Id = new Guid("7709fb74-959f-47a7-b2e0-5e94e48f99d2"),
                            AppointmentDate = new DateTime(2024, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Branch = 0,
                            DoctorId = 3,
                            PatientTc = "34567890123"
                        });
                });

            modelBuilder.Entity("HastaneRandevuSistemiAPI.Models.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Branch")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Branch = 4,
                            Name = "Ali",
                            Role = 1,
                            Surname = "Yılmaz"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Branch = 1,
                            Name = "Ayşe",
                            Role = 4,
                            Surname = "Kara"
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Branch = 5,
                            Name = "Mehmet",
                            Role = 0,
                            Surname = "Demir"
                        });
                });

            modelBuilder.Entity("HastaneRandevuSistemiAPI.Models.Entities.Patient", b =>
                {
                    b.Property<string>("Tc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("branch")
                        .HasColumnType("int");

                    b.HasKey("Tc");

                    b.HasIndex("Tc")
                        .IsUnique();

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Tc = "12345678901",
                            Email = "zeynep.aydin@example.com",
                            Name = "Zeynep",
                            Phone = "5551234567",
                            Surname = "Aydın",
                            branch = 0
                        },
                        new
                        {
                            Tc = "23456789012",
                            Email = "emre.koc@example.com",
                            Name = "Emre",
                            Phone = "5557654321",
                            Surname = "Koç",
                            branch = 0
                        },
                        new
                        {
                            Tc = "34567890123",
                            Email = "elif.polat@example.com",
                            Name = "Elif",
                            Phone = "5559876543",
                            Surname = "Polat",
                            branch = 0
                        });
                });

            modelBuilder.Entity("HastaneRandevuSistemiAPI.Models.Entities.Appointment", b =>
                {
                    b.HasOne("HastaneRandevuSistemiAPI.Models.Entities.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HastaneRandevuSistemiAPI.Models.Entities.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientTc");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HastaneRandevuSistemiAPI.Models.Entities.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HastaneRandevuSistemiAPI.Models.Entities.Patient", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
